# syntax=docker/dockerfile:1
FROM lscr.io/linuxserver/code-server:latest
# https://hub.docker.com/r/linuxserver/code-server/tags
# https://go.dev/dl/
COPY go-installer-arm.sh /tmp/go-installer.sh

RUN apt-get update \
  && sudo apt-get install -y ca-certificates curl gnupg \
  && curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash - && sudo apt-get install -y nodejs \
  && apt-get update && NEEDRESTART_MODE=a DEBIAN_FRONTEND="noninteractive" \
  apt-get install -y make build-essential libssl-dev \
  libbz2-dev libreadline-dev libsqlite3-dev wget nodejs llvm libncurses5-dev \
  libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python3-openssl \
  bind9-dnsutils bind9-host bind9-libs binutils binutils-common \
  binutils-x86-64-linux-gnu bzip2 cpp cpp-11 dpkg-dev g++ g++-11 gcc-11 \
  gcc-11-base libasan6 libbinutils libc-dev-bin libc6-dev libcap2-bin libcc1-0 \
  libcrypt-dev libctf-nobfd0 libctf0 libdpkg-perl libexpat1-dev libgcc-11-dev \
  libgomp1 libisl23 libitm1 libjs-jquery libjs-sphinxdoc \
  libjs-underscore libjson-c5 liblmdb0 liblsan0 libmaxminddb0 libmpc3 \
  libmpfr6 libnsl-dev libpython3-dev libpython3-stdlib libpython3.12 \
  libpython3.12-dev libpython3.12-minimal libpython3.12-stdlib \
  libstdc++-11-dev libtirpc-dev libtsan0 libubsan1 libuv1 libxml2 \
  linux-libc-dev lto-disabled-list make media-types python3 \
  python3-lib2to3 python3-minimal python3-pip-whl python3-pkg-resources \
  python3-setuptools python3-setuptools-whl python3-wheel python3.12 \
  python3.12-dev python3.12-minimal python3.12-venv rpcsvc-proto xz-utils \
  zlib1g-dev zsh-common dnsutils iputils-ping htop jq ninja-build gettext cmake unzip \
  # Install Go
  && /bin/bash /tmp/go-installer.sh \
  # Clean up
  && rm -f /tmp/go-installer.sh /tmp/nvim-linux64.deb /go*.tar.gz \
  && apt-get autoremove -y && apt-get clean \
  # Add user abc to sudoers
  && echo "abc ALL=(ALL) NOPASSWD:ALL" | sudo tee -a /etc/sudoers

# Install NeoVim
RUN git clone --depth 1 --branch v0.10.1 https://github.com/neovim/neovim.git /tmp/neovim-aarch64 \
  && cd /tmp/neovim-aarch64 \
  && make CMAKE_BUILD_TYPE=Release \
  && make install \
  && rm -rf /tmp/neovim-aarch64
